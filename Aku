return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,x,x,x)local x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=87,89,61,26,73,98,82,57,73,92,59,33,47,13,55,68,31,13,19,32,79,45,36,35,98,33,56,31,83,45,52,15,63,52,36,88,77,11,81,63,19,53,68,74,25,53,60,98,73,57 while x~=71 do if y<=790 then if y>=454 then if y>=602 then if y<=666 then if y<=602 then ch=(unpack or table.unpack)y=631 else if y>633 then y=703 do bf={}end else y=666 by=tonumber end end else if y>=752 then if y>760 then bp={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,r,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{h,5,6,7,0,c,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,k,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,g,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,f,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,j,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,w,5,4,3,2,1,0,},nil,nil}y=815 else cb=cfv,function(c,f,f)return bf[by(c,16)]end)y=790 end else y=752 for c=0,255 do bf[c]=bh(c);end end end else if y<=496 then if y>456 then y=522 bl=type else y=496 bi=select end else if y>=555 then if y<571 then do bw=math.abs end y=578 else y=602 cj=math.floor end else y=555 bx=(function(c,f,f)if not(bl(c)~='number')then return true else do return false end end end)end end end else if y>=236 then if y>=352 then if y>=369 then if y>371 then y=454 bg=setmetatable else z=(getfenv or function()return _ENV end)y=407 end else y=369 do bz=math.ldexp end end else if y>=285 then if y<320 then y=326 bs=table.concat else ci=table.insert y=352 end else bm=string.rep y=285 end end else if y<=107 then if y<99 then y=107 z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=nil else y=135 ck=string.byte end else if y<=135 then y=168 bh=string.char else if y<207 then y=214 bv=string.sub else y=236 cf=string.gsub end end end end end else if y>=1101 then if y<=1268 then if y<=1149 then if y<1142 then br=function()local c,f do f,c=ck(cb,ca,(ca+2))end ca=(ca+2);do return((c*256)+f);end end y=1149 else bd=function()local c,f,g,h,j,k,r,v=76,48,67,87,28,52,71,64,31,39,57,28,33,70,66,29,32,21 while c~=47 do if f<=178 then if f<=66 then if f<64 then g,h,j,k,r,v=nil f=66 else f=107 do h=bq()end end else if f<=107 then r=bq()f=148 else if f>151 then f=203 j=((-1)^ba(31,r,1))else f=178 if((h==0 and r==0))then return 0 end end end end else if f<=260 then if f>=245 then if f>247 then f=290 v=1 else g=(ba(0,r,20)*4294967296+h)f=260 end else f=245 k=ba(20,r,11)end else if f>=313 then if f<319 then f=328 do return(j*(2^(k-1023))*(g/bo+v))end else c=47;end else if 0==k then do if 0~=g then k=1 v=0 else return(j*0)end end elseif not(k==2047)then else if not(g~=0)then do do return(j*(0/0))end end else return(j*(1/0))end end f=313 end end end end end y=1195 end else if y<=1195 then y=1243 bc=function(c,c,c,c)local c,f,g,h=84,44,79,40,35,58,66,32,66,45,44,84,41,23 while c~=40 do if f<=131 then if f>=82 then if f<124 then f=131 g=bq()else f=171 do h=cb:sub(ca,(ca+g-1))end end else f=82 g,h=nil end else if f>=209 then if f>214 then c=40;else f=241 return h;end else f=209 ca=(ca+g);end end end end else if y>1248 then bt={}y=1306 else y=1268 bu=function(...)do return{...},bi('#',...)end end end end end else if y>=1391 then if y>=1411 then if y>1418 then x=71;else y=1435 return bn(bk(z()),{},z())();end else bn=function(c,f,g,h)local h,j,k,r,v do h=c[162]end v=cg j=c[103]r=c[60]k=c[145]return function(...)local c,v,w,x,z,bf,bg,bh,bl z=1 bf=-1 x=-1 w={}v={...}c=(bi('#',...)-1)bh={}bl={}for x=0,c do if(not(x<r))then w[(x-r)]=v[(x+1)];else bl[x]=v[(x+1)];end;end;bg=(c-r+1)while true do local x,bg,bi,bm,br,bs,bv,bw,bx,by do bg=k[z]end bv=bg[72]br=bg[175]by=bg[10]do bi=bg[188]end x=bg[76]bx=bg[120]bs=bg[8]bw=bg[47]bm=bg[12]if not(bv<47)then if not(bv<71)then if not(bv<83)then do if not(bv<89)then if not(bg[72]>91)then if not(bv>89)then bl[bm]=(function()bl[by]=bn(j[bi],a,g);end)else if 90==bg[72]then bl={};for a=0,c do if(a<r)then do bl[a]=v[(a+1)];end else do break end end;end;else bl[by]={};end end else if not(bg[72]<93)then if(bv<94)then local a a=by do return ch(bl,a,(a+bw))end;else local a a=by bl[a]=bl[a](bl[a+1]);end else cg[bg[10]]()end end else if not(bv>85)then if not(bv<84)then if not(bv~=84)then local a,c c=bg[10]a=bl[bw]bl[(c+1)]=a;bl[c]=a[bl[x]];else bl[by]=(bl[bw]%h[x]);end else do do return bl[bs][bx]end end end else if not(bv>86)then g=bl[bg[by]]else if(bv>87)then bf=bg[bg[10]];else if not bl[x]then bl[by]=bl[bg[76]];z=bg[47];end;end end end end end else if not(bv<77)then if not(bv>79)then if not(bv>77)then bl[bg[10]]=g[h[bw]][h[x]];else do if(bv>78)then while(bl[by]>=bl[x])do z=bw;break end elseif((bl[by]>bl[x]))then z=bw;end end end else if not(bv>80)then bl[by]=(bl[bw]+bl[x]);else if(bv<82)then k[z]=bt[bg[120]];z=bg[47];else bl[by][bl[bw]]=bl[x];end end end else if not(bg[72]<74)then if not(bv<75)then if 75==bv then local a a=bg[10]bl[a]=bl[a](ch(bl,a+1,bf));else local a,c,r r=by do c=bl[r]end a=bw do for v=1,a do c[v]=bl[(r+v)]end;end end else local a a=by bl[a](ch(bl,(a+1),bf))end else if not(bg[72]<72)then do if 72==bg[72]then local a,c,r do a=bg[10]end c=bl[a]r=bl[(a+2)]do if((r>0))then if((c>bl[a+1]))then z=bw;else bl[(a+3)]=c;end elseif((c<bl[a+1]))then do z=bw;end else bl[(a+3)]=c;end end else do bl[by]=cg[bi]end end end else cg[by]={}end end end end else if not(bv<p)then if not(bv<65)then do if not(bv>67)then if not(bg[72]<66)then if not(bv~=66)then bl[by]=h[bw]else if bl[bg[10]]then z=bw;end;end else bl[by][h[bw]]=h[x];end else if not(bv<69)then if(bv>69)then bl[bg[10]]=(bl[bw]+h[x]);else bl[bg[10]]=(not(bw==0));z=(z+1);end else bl[bg[10]]=(bl[bw]/bl[x]);end end end else if not(bv>61)then if not(bv>59)then do bl[by]=(bl[bg[47]]-bl[x]);end else if(bv>60)then while((bl[by]<bl[x]))do z=bw;break end else for a=by,bw do bl[a]=nil;end;end end else if not(bg[72]>62)then k[z]=bt[bx];z=bg[47];else if 63==bv then bl[bm]();else end end end end else if not(bv<53)then if not(bv<56)then if not(bv<57)then do if(bv>57)then else z=bg[47];end end else local a,c c,a=bu(...)for a=1,by do bl[(a-1)]=c[a]end end else do if not(bv>53)then do bl[bm]=(function()bl[bg[10]]=bn(j[bg[188]],nil,g);end)end else do if 54==bv then local a a=by bl[a]=bl[a]();else bl[by]=(bl[bw]/h[x]);end end end end end else if not(bv<50)then do if not(bv<51)then if(bv<52)then do z=((bl[bg[10]]<bl[bg[76]])and bg[47]or z)end else bl[by]=bl[bw];end else local a,c,p,r r=by p,c=bu(bl[r]())bf=(c+r-1)do a=0 end for c=r,bf do do a=(a+1);end bl[c]=p[a];end;end end else if not(bv<48)then if(bv<49)then if((h[by]<bl[x]))then z=bw;end;else z=((h[by]~=h[x])and bw or z)end else bl[by]=bl[bw][bl[x]];end end end end end else do if not(bv<23)then if not(bv>34)then if not(bv>28)then if not(bv<26)then if not(bg[72]>26)then if(h[x]~=bl[by])then z=bw;end;else if(bv<28)then bl[by]=bl[bg[47]][h[x]];else local a,c,p p=by a={bl[p](bl[p+1])}c=0 for r=p,x do do c=(c+1);end bl[r]=a[c];end end end else if not(bv>23)then local a,c,p,r,v r=by c=x v=(r+2)p={bl[r](bl[r+1],bl[v])}for bm=1,c do bl[(v+bm)]=p[bm]end a=bl[(r+3)]if a then bl[v]=a else z=bw;end;else if(bg[72]>24)then local a,c a=by c={}for p=1,#bh do local r r=bh[p]for p=0,#r do local v,bm,br bm=r[p]v=bm[1]br=bm[2]while v==bl and br>=a do c[br]=v[br];bm[1]=c;break end end;end;else g[h[bw]]=bl[by];end end end else if not(bv>31)then do if not(bv<30)then if(bg[72]<31)then bl[by]=(bl[bw]%bl[x]);else local a,c,p,r do a=by end p,c=bu(bl[a](ch(bl,(a+o),bg[47])))bf=(c+a-1)r=0 for c=a,bf do r=(r+1);do bl[c]=p[r];end end;end else cg=bl end end else if not(bv>32)then k[z]={[10]=1,[47]=1,[76]=70,[120]=0,[72]=bv- -34};z=(z-1);else if(bv>33)then h=cg[by](h)else do bl[by]=#bl[bg[47]];end end end end end else do if not(bv<41)then if not(bg[72]>43)then do if not(bv>41)then bl[by]=(bl[bw]*h[x]);else do if 42==bv then k[z]={[76]=t,[72]=bv- -10,[120]=0,[47]=12,[10]=28};z=(z-1);else do bl[by]=bn(j[bg[47]],nil,g);end end end end end else if not(bv>44)then cg[by]=cg[bi]else if not(bv~=45)then while(bl[by]~=bl[x])do z=bw;break end else do bl[bg[10]]=g[h[bw]];end end end end else if not(bv<38)then if not(bv<39)then do if(bg[72]<40)then else local a a=by bl[a](ch(bl,(a+1),bg[47]))end end else do bl[by]=f[bw];end end else if not(bv>35)then bl[by]=bl[bw]else if 36==bv then local a a=bl[bs][bx]bl[bs][bx]=(a..bl[x]);else do bl[by]=nil;end end end end end end end else do if not(bv<11)then if not(bv<17)then if not(bv<20)then if not(bv>20)then local a a=bg[10]bl[a]=bl[a](ch(bl,a+1,bg[47]));else if(bv>21)then local a a=by do return bl[a](ch(bl,(a+1),bw))end;else do return bl[by]end end end else if not(bv>17)then bl[by]=(not bl[bw]);else if(bv>18)then z=((h[bg[10]]<bl[bg[76]])and bw or z)else bl[by]=-bl[bw];end end end else if not(bv>13)then if not(bg[72]>11)then bl[by]();else if 12==bv then local a,c a=by c={}if(#bh>0)then for g=1,#bh do local h h=bh[g]for g=0,#h do local j,k,o j=h[g]k=j[n]o=j[2]if(k==bl and o>=0)then do c[o]=k[o]end do j[1]=c end end end end end return ch(bl,a,bf);else local a,c,g a=by g=bl[(a+2)]do c=(bl[a]+g)end bl[a]=c;if((g>0))then if(not(c>bl[a+1]))then z=bw;bl[(a+3)]=c;end elseif(not(c<bl[a+1]))then do z=bg[q];end bl[(a+3)]=c;end end end else if not(bv>14)then local a a=by bl[a](bl[(a+1)])else if not(bv~=15)then local a,c,g,h g=by a=((x-1)*50)h=bl[g]c=bw for j=1,c do h[(a+j)]=bl[(g+j)]end;else bl[bg[10]]=(bl[bw]*bl[bg[76]]);end end end end else if not(bv>4)then do if not(bv<2)then if not(bv<3)then if not(bv~=3)then local a,c,g g=bg[10]c={bl[g](ch(bl,g+1,bw))}a=0 for h=g,x do a=(a+1);bl[h]=c[a];end else if by then bg[10]=false;x=bg[47];z=(z-1);else z=(z+bg[47]+x);end end else f[bg[47]]=bl[by];end else if(bv<1)then local a,c c=by a=bg[47]for f=c,a do bl[f]=w[(f-c)];end;else cg[by]=bl[bg[b]]end end end else if not(bv<8)then do if not(bv<9)then if 9==bv then local a,b do b=bg[47]end a=bl[b]for c=(b+1),x do a=(a..bl[c]);end;bl[by]=a;else bl[by]=cg[bi]end else while not bl[bg[10]]do z=bg[47];break end end end else do if not(bg[72]>5)then bl[bg[by]]=bl else if not(bv~=6)then local a a={}if(#bh>0)then for b=1,#bh do local c c=bh[b]for b=0,#c do local f,g,h g=c[b]h=g[1]do f=g[2]end do if(h==bl and f>=0)then a[f]=h[f]do g[1]=a end end end end end end return false,bl[(by+1)],bl[(bg[10]+2)];else bl[by]=(bl[bg[47]]^bl[bg[76]]);end end end end end end end end end end z=(z+1);end;end;end y=1411 end else if y>=1324 then if y<1355 then cg={}y=1361 else cl={}y=1391 end else bk=function(a,b)local b,c,f,g,h,j,k,n=80,78,34,70,78,17,30,76,82,54,36,74,66,83,92,32,94,12,67,50,49,73,69,57,70,86 while b~=55 do if c>=372 then if c<=452 then if c<=387 then if c>380 then c=424 g={}else c=387 do f=bq()end end else if c<450 then c=452 for o=l,f do local l,p,q,r=74,48,10,56,23,74,50,22,55,63,70,97,47 while l~=25 do if p>=156 then if p>=194 then if p<211 then p=215 g[o]=r;else break end else p=194 if(1==q)then r=(not(cd()==0));elseif(not(q~=4))then r=bd();elseif(2==q)then do r=bc();end elseif(0==q)then do r=a[bc()];end end;end else if p<=48 then p=89 q,r=nil else if p>98 then r=nil p=156 else do q=cd()end p=128 end end end end end else do j[162]=g end c=493 end end else if c>=556 then if c<=556 then c=578 j[145]=h;else if c<595 then c=598 return j;else b=55;end end else if c<523 then c=525 j[60]=cd();else c=556 for a=1,bq()do local b,l,o,p,q,r=87,60,30,30,92,43,73,78,85,93,15,22,17,92,18,48,56,81,17,28,60,61,30,92,17 while b~=41 do if l<=280 then if l>=183 then if l<=205 then if l<201 then if 1==cd()then for b=1,cd()do do q[113][b]={cd()==0,bq()}end end end l=205 else do p=bq()end l=249 end else if l<=249 then r=bq()l=264 else if l<276 then l=280 o=ce(p,1,2)else q[45]=o l=325 end end end else if l>=110 then if l>119 then l=183 q[113]={};else q[175]=cd();l=134 end else if l>69 then l=110 q={{},nil,nil}else o,p,q,r=nil l=94 end end end else if l>=480 then if l<=522 then if l>485 then l=569 do q[8]=-q[10]end else do q[u]=ce(p,12,20);end l=522 end else if l<=569 then l=606 do q[12]=-q[d]end else if l>608 then break else l=650 h[a]=q;end end end else if l<=372 then if l<368 then l=372 do q[72]=ce(r,1,11);end else l=418 do q[m]=ce(p,3,11);end end else if l>426 then q[76]=ce(p,21,29);l=480 else q[47]=ce(r,12,33);l=459 end end end end end end end end end else if c<=179 then if c<=99 then if c<95 then f,g,h,j,k,n=nil c=99 else h={}c=135 end else if c<175 then c=179 k={}else j={}c=216 end end else if c>=284 then if c<320 then for a=1,bq()do k[a-1]=bk();end c=328 else j[103]=k;c=372 end else if c<235 then do n=bq()end c=241 else for a=(#bt+1),(#bt+n)do local b,d,f,g,h=58,70,54,26,29,53,67,93,34,97,46,56,84,78,14,41,45,68,45,35,75,45,70 while b~=48 do if d>=373 then if d>=518 then if d<=551 then if d<549 then do h[8]=-h[10]end d=551 else h[12]=-h[76]d=590 end else if d<624 then d=628 bt[a]=h;else b=48;end end else if d>=447 then if d<475 then h[76]=ce(f,21,29);d=481 else h[47]=ce(g,12,33);d=518 end else if d<407 then d=409 do h[10]=ce(f,3,11);end else do h[188]=ce(f,12,20);end d=447 end end end else if d<=185 then if d<=115 then if d<108 then d=115 f,g,h=nil else h={}d=155 end else if d<177 then d=185 h[175]=cd();else d=213 f=bq()end end else if d>=287 then if d>290 then d=373 h[e]=ce(g,1,11);else d=328 h[45]=ce(f,i,2);end else if d<235 then g=bq()d=240 else d=287 h[120]=cd();end end end end end end c=284 end end end end end end y=1324 end end end else if y<=915 then if y>=873 then if y<=873 then bb={[0]=1}y=893 else if y>899 then y=940 for a=1,31 do bb[a]=be be=(be*2)end else y=915 be=2 end end else if y>822 then y=873 bo=(2^s)else y=839 cc=''end end else if y>=1035 then if y>=1052 then if y<1070 then bq=function()local a,b,c,d do b,c,a,d=ck(cb,ca,(ca+3))end ca=(ca+4);return((d*16777216)+(a*65536)+(c*256)+b);end y=1075 else y=1101 cd=function()local a a=ck(cb,ca,ca)do ca=(ca+1);end return a;end end else ca=1 y=1052 end else if y<=940 then do ba=function(a,b,c,d,d)local d,e,f=67,34,71,94,70,65,43,59,98,36,12,80,61 while d~=31 do if e<=123 then if e>=83 then if e>85 then e=141 f=((b/bb[a])%bb[c])else e=123 f=nil end else f=nil e=83 end else if e<=141 then e=173 f=(f-f%1)else if e>177 then d=31;else e=217 return f end end end end end end y=989 else if y<1010 then y=1016 bj=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bp[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)else y=1035 do ce=function(a,b,c,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end end end end end end end end end)(nil,188,1,76,72,6,14,4,1,9,6,1,10,1,1,59,47,4,52,19,120,'..',6)
